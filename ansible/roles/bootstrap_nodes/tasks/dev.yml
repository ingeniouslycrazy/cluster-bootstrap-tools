- ansible.builtin.debug:
    msg: "Preparing Proxmox for development environment"

- name: Install python3-proxmoxer
  ansible.builtin.apt:
    name: python3-proxmoxer
    state: present
    update_cache: yes

- name: Create ansible user
  ansible.builtin.include_role:
    name: linux_user
  vars:
    user_group_name: admins
    user_name: ansible
    user_ssh_key: "{{ lookup('file', '/srv/secrets/ansible_id_rsa.pub') }}"
    user_state: present

- name: Extract token
  shell: cat /etc/pve/priv/token.cfg | grep terraform-prov@pve | awk '{print $NF}'
  changed_when: false
  register: api_token_extract

- set_fact:
    api_token: "{{ api_token_extract.stdout }}"
  when: api_token_extract.stdout != ""

- name: Prepare API user
  block:

    - name: Create user for terraform
      shell: |
        pveum role add TerraformProv -privs "Datastore.AllocateSpace Datastore.AllocateTemplate Datastore.Audit Pool.Allocate Sys.Audit Sys.Console Sys.Modify VM.Allocate VM.Audit VM.Clone VM.Config.CDROM VM.Config.Cloudinit VM.Config.CPU VM.Config.Disk VM.Config.HWType VM.Config.Memory VM.Config.Network VM.Config.Options VM.Migrate VM.Monitor VM.PowerMgmt SDN.Use"
        pveum user add terraform-prov@pve
        pveum aclmod / -user terraform-prov@pve -role TerraformProv
        pveum user token add terraform-prov@pve terraform2api

    - name: Extract token
      shell: cat /etc/pve/priv/token.cfg | grep terraform-prov@pve | awk '{print $NF}'
      changed_when: false
      register: api_token_new

    - set_fact:
        api_token: "{{ api_token_new.stdout }}"

    - name: Update localhost env file
      ansible.builtin.lineinfile:
        path: /srv/export/.cltenv
        regexp: "{{ item.regex }}"
        line: "{{ item.value }}"
      delegate_to: localhost
      loop:
        - regex: '^PROXMOX_VE_ENDPOINT='
          value: PROXMOX_VE_ENDPOINT="https://node01.cluster01.ingeniouslycrazy.com:8006/api2/json"
        - regex: '^PROXMOX_VE_API_TOKEN='
          value: PROXMOX_VE_API_TOKEN="terraform-prov@pve!terraform2api={{ api_token }}"
        - regex: '^PROXMOX_VE_API_TOKEN_RAW='
          value: PROXMOX_VE_API_TOKEN_RAW="{{ api_token }}"

  when: api_token_extract.stdout == ""

- name: Check the API connection
  community.general.proxmox_user_info:
    api_host: "node01.cluster01.ingeniouslycrazy.com"
    api_user: "terraform-prov@pve"
    api_token_id: "terraform2api"
    api_token_secret: "{{ api_token }}"
  delegate_to: localhost

- name: Upload ISOs
  shell: scp /srv/iso/*.iso ansible@node01.cluster01.ingeniouslycrazy.com:/var/lib/vz/template/iso/ -p 2222 -i /srv/secrets/id_rsa